
services:
  # データベース（SQLite用のボリューム管理）
  database:
    image: alpine:latest
    command: tail -f /dev/null
    volumes:
      - db_data:/data
    networks:
      - bookshelf-network

  # バックエンドAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bookshelf-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=/data/bookshelf.db
      - JWT_SECRET=${JWT_SECRET}
      - GOOGLE_BOOKS_API_KEY=${GOOGLE_BOOKS_API_KEY}
    volumes:
      - ./backend:/app
      - /app/node_modules
      - db_data:/data
    networks:
      - bookshelf-network
    depends_on:
      - database
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # フロントエンド
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bookshelf-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NEXT_PUBLIC_FIREBASE_API_KEY=${NEXT_PUBLIC_FIREBASE_API_KEY}
      - NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN}
      - NEXT_PUBLIC_FIREBASE_PROJECT_ID=${NEXT_PUBLIC_FIREBASE_PROJECT_ID}
      - NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET}
      - NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID}
      - NEXT_PUBLIC_FIREBASE_APP_ID=${NEXT_PUBLIC_FIREBASE_APP_ID}
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - bookshelf-network
    depends_on:
      backend:
        condition: service_healthy

  # リバースプロキシ（nginx）
  nginx:
    image: nginx:alpine
    container_name: bookshelf-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    networks:
      - bookshelf-network
    depends_on:
      - frontend
      - backend
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  db_data:
    driver: local

networks:
  bookshelf-network:
    driver: bridge
    name: bookshelf-network